//
//  RepoCarInteractor.swift
//  Inspection
//
//  Created by Thanawat prathumset on 4/2/2564 BE.
//  Copyright (c) 2564 BE ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol RepoCarBusinessLogic
{
    func doSomething(request: RepoCar.Something.Request)
    func fetchDeliveryList(request: RepoCar.Something.Request)
}

protocol RepoCarDataStore
{
    var itemList : [DeliveryPersonModel] { get set }
}

class RepoCarInteractor: RepoCarBusinessLogic, RepoCarDataStore
{
    var itemList: [DeliveryPersonModel] = []
    var presenter: RepoCarPresentationLogic?
    var worker: RepoCarWorker?
    
    deinit {
        print("üî∏üê∂ deinit repocar RepoCarInteractor")
    }
    
    func doSomething(request: RepoCar.Something.Request)
    {
        let response = RepoCar.Something.Response()
        presenter?.presentSomething(response: response)
    }
    
    //MARK: Fetch Photo List
    func fetchDeliveryList(request: RepoCar.Something.Request) {
        worker = RepoCarWorker()
        worker?.fetchDeliveryPersonList(completion: {[weak self] (response) in
            guard let weakself = self else { return }
            if let _ = response.error {
                weakself.presenter?.presentSomething(response: response)
            }else{
                weakself.presenter?.presentDeliveryPersonList(response: response)
            }
        })
        
    }
}


//MARK: extension
extension RepoCarInteractor {
    
}
