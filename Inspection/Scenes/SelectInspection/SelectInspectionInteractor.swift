//
//  SelectInspectionInteractor.swift
//  Inspection
//
//  Created by Thanawat prathumset on 2/2/2564 BE.
//  Copyright (c) 2564 BE ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol SelectInspectionBusinessLogic
{
    func comfirmPlace(request: SelectInspection.Default.Request)
    func fetchLocation(request: SelectInspection.Default.Request)
    func fetchPlantLocation(request: SelectInspection.Default.Request)
    
    func setLocationName(request: SelectInspection.Default.Request)
}

protocol SelectInspectionDataStore
{
  //var name: String { get set }
    var defaultSelectReceiveName : PlantResponse? { get set }
    var defaultSelectStoreName : StorageLocationModel? { get set }
    
    var locationList : [StorageLocationModel]? { get set }
    var plantLocationList : [PlantResponse]? { get set }
}

class SelectInspectionInteractor: SelectInspectionBusinessLogic, SelectInspectionDataStore
{
    var defaultSelectReceiveName: PlantResponse?
    var defaultSelectStoreName: StorageLocationModel?
    
  var presenter: SelectInspectionPresentationLogic?
  var worker: SelectInspectionWorker?
  
    var locationList : [StorageLocationModel]?
  
    var workerReceiver : ReceiverCarWorker?
    var plantLocationList : [PlantResponse]?
  
  // MARK: Do something
    
    func comfirmPlace(request: SelectInspection.Default.Request){
        
        defaultSelectReceiveName = request.selectReceiveName
        defaultSelectStoreName = request.selectStoreName
        
        //set place
        DataController.shared.receiverCarModel.plant = defaultSelectReceiveName?.plant1
        
        DataController.shared.receiverCarModel.receiverPlace = defaultSelectStoreName?.location
        DataController.shared.receiverCarModel.storePlace = defaultSelectStoreName?.location
        
        
        let response = SelectInspection.Default.Response(selectReceiveName: request.selectReceiveName, selectStoreName: request.selectStoreName)
        presenter?.presentTextDisplay(response: response)
    }
    
    func fetchLocation(request: SelectInspection.Default.Request) {
        worker = SelectInspectionWorker()
        worker?.fetchLocation(completion: { [weak self] (response) in
            
            self?.presenter?.presentFetchLocation(response: response)
            self?.locationList = response.storageList
            
            let firstItem = response.storageList?.first
            

            self?.defaultSelectStoreName = firstItem
            

            DataController.shared.receiverCarModel.receiverPlace = firstItem?.location
            DataController.shared.receiverCarModel.storePlace = firstItem?.location
            
            self?.mappingLocationName()
        })
    }

    func fetchPlantLocation(request: SelectInspection.Default.Request) {
        workerReceiver =  ReceiverCarWorker()
        workerReceiver?.getPlantLocation(completion: { [weak self] response in
            
            
            if let error = response.error {
                let response = SelectInspection.Default.Response(error: error)
                self?.presenter?.presentFetchPlantLocation(response: response)
            }else{

                self?.plantLocationList = response.plantLocations
                let firstItem = response.plantLocations?.first
                
                self?.defaultSelectReceiveName = firstItem
                
                DataController.shared.receiverCarModel.plant = firstItem?.plant1
                
                let response = SelectInspection.Default.Response(plantLocationList: response.plantLocations)
                self?.presenter?.presentFetchPlantLocation(response: response)
                
                self?.mappingLocationName()
            }
        })
    }
    
    var locationName:String?
    
    func setLocationName(request: SelectInspection.Default.Request) {
        self.locationName = request.locationName
//        let response = SelectInspection.Default.Response(locationName:locationName)
//        presenter?.presentTextDisplay(response: response)
        mappingLocationName()
    }

    fileprivate func mappingLocationName(){
        guard var locationName = locationName?
                .replacingOccurrences(of: " ", with: "")
                .lowercased()
                .trimWhiteSpace,
              let locationList = locationList,
              let plantLocationList = plantLocationList  else { return }
        
        print("üìçLOCATION: \(locationName)")
        /// fix name songkhla = hatyai
        if locationName == "songkhla" {
            locationName = "hatyai"
        }
        
        let plantModel = plantLocationList.filter { model in
             if let name = model.desc_BU?
                 .replacingOccurrences(of: " ", with: "")
                 .lowercased()
                 .trimWhiteSpace,
                (name == locationName) {
                 return true
             }
             return false
         }
        
        let selectModel = locationList.filter { model in
            if let name = model.location?
                .replacingOccurrences(of: " ", with: "")
                .lowercased()
                .trimWhiteSpace,
               (name == locationName) {
                return true
            }
            return false
        }
        
      
        
        if let plantItem = plantModel.first,
           let storeItem = selectModel.first {
            
            print("ü•ïPLANT: \(plantItem.desc_BU ?? "")")
            print("ü•ïSTORE: \(storeItem.location ?? "")")
            
            self.defaultSelectStoreName = storeItem
            self.defaultSelectReceiveName = plantItem
            
            DataController.shared.receiverCarModel.plant = plantItem.plant1
            
            DataController.shared.receiverCarModel.receiverPlace = storeItem.location
            DataController.shared.receiverCarModel.storePlace = storeItem.location
            
            
            let response = SelectInspection.Default.Response(selectReceiveName: plantItem,
                                                             selectStoreName: storeItem)
            presenter?.presentTextDisplay(response: response)
       
        }else{
            print("NOT MATCH")
        }
        
    }
}
