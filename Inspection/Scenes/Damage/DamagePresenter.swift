//
//  DamagePresenter.swift
//  Inspection
//
//  Created by Thanawat Pratumsat on 7/6/2564 BE.
//  Copyright (c) 2564 BE ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol DamagePresentationLogic
{
  func presentSomething(response: Damage.Something.Response)
    func presentImage(response: Damage.Something.Response)
    func presentDamageImageModel(response: Damage.Something.Response)
    func presentRequiredField(response: Damage.Something.Response)
    
    func presentDemageDetail(response: Damage.Something.Response)
    func presentTypeDemage(response: Damage.Something.Response)
    func presentDemagePosition(response: Damage.Something.Response)
    func presentDemageSize(response: Damage.Something.Response)
    
}

class DamagePresenter: DamagePresentationLogic
{
  weak var viewController: DamageDisplayLogic?
  
  // MARK: Do something
  
  func presentSomething(response: Damage.Something.Response)
  {
    let viewModel = Damage.Something.ViewModel()
    viewController?.displaySomething(viewModel: viewModel)
  }
    
    func presentImage(response: Damage.Something.Response) {
        let viewModel = Damage.Something.ViewModel(imageResized: response.imageResized)
        viewController?.displayImagePreview(viewModel: viewModel)
    }
    
    //MARK: Confirm
    func presentDamageImageModel(response: Damage.Something.Response) {
        let viewModel = Damage.Something.ViewModel(damageModel: response.damageModel)
        viewController?.displayCallbackDamageImage(viewModel: viewModel)
    }
    
    func presentRequiredField(response: Damage.Something.Response) {
        let viewModel = Damage.Something.ViewModel(requiredFieldTuple: response.requiredFieldTuple)
        viewController?.displayRequiredField(viewModel: viewModel)
    }
    
    
    func presentTypeDemage(response: Damage.Something.Response) {
        let viewModel = Damage.Something.ViewModel(damageTypeList: response.damageTypeList)
        viewController?.displayTypeDemageDropdown(viewModel: viewModel)
    }
    func presentDemageSize(response: Damage.Something.Response) {
        let viewModel = Damage.Something.ViewModel(damageSizeList: response.damageSizeList)
        viewController?.displayDamageSizeListDropdown(viewModel: viewModel)
    }
    func presentDemageDetail(response: Damage.Something.Response) {
        let viewModel = Damage.Something.ViewModel(damageDetailList: response.damageDetailList)
        viewController?.displayDamageDetailListDropdown(viewModel: viewModel)
    }
    func presentDemagePosition(response: Damage.Something.Response) {
        let viewModel = Damage.Something.ViewModel(damagePosList: response.damagePosList)
        viewController?.displayDamagePosListDropdown(viewModel: viewModel)
    }
}
