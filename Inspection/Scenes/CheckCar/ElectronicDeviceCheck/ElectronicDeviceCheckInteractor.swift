//
//  ElectronicDeviceCheckInteractor.swift
//  Inspection
//
//  Created by Thanawat prathumset on 15/2/2564 BE.
//  Copyright (c) 2564 BE ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol ElectronicDeviceCheckBusinessLogic
{
    func doSomething(request: ElectronicDeviceCheck.Something.Request)
    // add on 01/05/2024
    func getWindowOptions(request: ElectronicDeviceCheck.Something.Request)
}

protocol ElectronicDeviceCheckDataStore
{
    //var name: String { get set }
}

class ElectronicDeviceCheckInteractor: ElectronicDeviceCheckBusinessLogic, ElectronicDeviceCheckDataStore
{
    var presenter: ElectronicDeviceCheckPresentationLogic?
    var worker: ElectronicDeviceCheckWorker?
    //var name: String = ""
    
    var windowOptions: [WindowOptionModel]?
    
    // MARK: Do something
    
    func doSomething(request: ElectronicDeviceCheck.Something.Request)
    {
        worker = ElectronicDeviceCheckWorker()
        worker?.doSomeWork()
        
        let response = ElectronicDeviceCheck.Something.Response()
        presenter?.presentSomething(response: response)
    }
    
    func getWindowOptions(request: ElectronicDeviceCheck.Something.Request) {
        worker = ElectronicDeviceCheckWorker()
        worker?.fetchWindowOptions(completion: { [weak self] (response) in
            self?.presenter?.presentWindowOptions(response: response)
            
            if let values = response.windowOptions {
                self?.windowOptions = values
            }
            
        })
    }
}
