//
//  AboutCarWorker.swift
//  Inspection
//
//  Created by Thanawat prathumset on 8/2/2564 BE.
//  Copyright (c) 2564 BE ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

typealias aboutCarHandler = (AboutCar.Something.Response) -> ()
class AboutCarWorker
{
  func doSomeWork()
  {
  }
    //MARK: Color
    func fetchColor(completion: @escaping aboutCarHandler){
        
        showLoading()
        
        let request = BaseRequest()
        StandardColorService().callServiceArray(request: request) { (result) in
            
            hideLoading()
            
            switch result {
            
            case .success(let colorList):
                let response = AboutCar.Something.Response(colorList: colorList)
                completion(response)
            case .failure(let error):
                let response = AboutCar.Something.Response(error: error.getMessage)
                completion(response)
            }
        }
    }
    //MARK: Province
    func fetchProvince(completion: @escaping aboutCarHandler){
        
        showLoading()
        
        let request = BaseRequest()
        ProvinceService().callServiceArray(request: request) { (result) in
            
            hideLoading()
            
            switch result {
            case .success(let provinceList):
                let response = AboutCar.Something.Response(provinceList: provinceList)
                completion(response)
            case .failure(let error):
                let response = AboutCar.Something.Response(error: error.getMessage)
                completion(response)
            }
        }
    }

    //MARK: Body
    func fetchBodyCar(completion: @escaping aboutCarHandler){
        
        showLoading()
        
//        let request = BaseRequest()
//        BodyTypeService().callServiceArray(request: request) { (result) in
//
//            hideLoading()
//
//            switch result {
//            case .success(let bodyList):
//                let response = AboutCar.Something.Response(bodyList: bodyList)
//                completion(response)
//            case .failure(let error):
//                let response = AboutCar.Something.Response(error: error.getMessage)
//                completion(response)
//            }
//        }
        
        let request = BaseRequest()
        BodyCarService().callServiceArray(request: request) { (result) in
            
            hideLoading()
            
            switch result {
            case .success(let bodyList):
                let response = AboutCar.Something.Response(bodyList: bodyList)
                completion(response)
            case .failure(let error):
                let response = AboutCar.Something.Response(error: error.getMessage)
                completion(response)
            }
        }
        
    }
}
