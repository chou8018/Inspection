//
//  SignatureInteractor.swift
//  Inspection
//
//  Created by Thanawat prathumset on 8/2/2564 BE.
//  Copyright (c) 2564 BE ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol SignatureBusinessLogic
{
  func setUpTitle(request: Signature.Something.Request)
    func confirmSignatureView(request: Signature.Something.Request)
}

protocol SignatureDataStore
{
  //var name: String { get set }
    var title : String { get set }
    var signatureImage : UIImage? { get set }
    var user : Signature.USER? { get set }
}

class SignatureInteractor: SignatureBusinessLogic, SignatureDataStore
{
    
    
    
    
  var presenter: SignaturePresentationLogic?
  var worker: SignatureWorker?
    var title : String = ""
    var signatureImage: UIImage?
    var user: Signature.USER?
    
  // MARK: Do something
  
  func setUpTitle(request: Signature.Something.Request)
  {
    
    let response = Signature.Something.Response(titleName: title,
                                                signatureImage: signatureImage,
                                                user: user)
    presenter?.presentTitle(response: response)
  }
    
    
    func confirmSignatureView(request: Signature.Something.Request) {
     
        guard let view = request.signatureView,
              let signatureImage = image(with: view) else { return }
        
        
        let response = Signature.Something.Response(signatureImage : signatureImage,
                                                    user: user)
        presenter?.getSignatureUIImage(response: response)
        
    }
    
    func image(with view: UIView) -> UIImage? {
        UIGraphicsBeginImageContextWithOptions(view.bounds.size, view.isOpaque, 0.0)
        defer { UIGraphicsEndImageContext() }
        if let context = UIGraphicsGetCurrentContext() {
            view.layer.render(in: context)
            let image = UIGraphicsGetImageFromCurrentImageContext()
            return image
        }
        return nil
    }
}
