//
//  GearCheckViewController.swift
//  Inspection
//
//  Created by Thanawat prathumset on 15/2/2564 BE.
//  Copyright (c) 2564 BE ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit
import RadioGroup

protocol GearCheckDisplayLogic: AnyObject
{
    func displaySomething(viewModel: GearCheck.Something.ViewModel)
}

class GearCheckViewController: ViewController, GearCheckDisplayLogic
{
    var interactor: GearCheckBusinessLogic?
    var router: (NSObjectProtocol & GearCheckRoutingLogic & GearCheckDataPassing)?
    
    // MARK: Object lifecycle
    
    override init(nibName nibNameOrNil: String?, bundle nibBundleOrNil: Bundle?)
    {
        super.init(nibName: nibNameOrNil, bundle: nibBundleOrNil)
        setup()
    }
    
    required init?(coder aDecoder: NSCoder)
    {
        super.init(coder: aDecoder)
        setup()
    }
    
    // MARK: Setup
    
    private func setup()
    {
        let viewController = self
        let interactor = GearCheckInteractor()
        let presenter = GearCheckPresenter()
        let router = GearCheckRouter()
        viewController.interactor = interactor
        viewController.router = router
        interactor.presenter = presenter
        presenter.viewController = viewController
        router.viewController = viewController
        router.dataStore = interactor
    }
    
    // MARK: Routing
    
    override func prepare(for segue: UIStoryboardSegue, sender: Any?)
    {
        if let scene = segue.identifier {
            let selector = NSSelectorFromString("routeTo\(scene)WithSegue:")
            if let router = router, router.responds(to: selector) {
                router.perform(selector, with: segue)
            }
        }
    }
    
    // MARK: View lifecycle
    
    override func viewDidLoad()
    {
        super.viewDidLoad()
        setUIView()
        setRadio()
        doSomething()
    }
    
    // MARK: Do something
    
    //@IBOutlet weak var nameTextField: UITextField!
    @IBOutlet weak var scrollView: UIScrollView!
    @IBOutlet weak var gearSystemRadio: RadioGroup!
    @IBOutlet weak var statusGearRadio: RadioGroup!
    @IBOutlet weak var driveShaftGearRadio: RadioGroup!
    @IBOutlet weak var gear4WDCheckBox: CheckBoxUIButton!
    @IBOutlet weak var summaryGearSystemTextField: MultilineTextField!
    
    // local strings
    @IBOutlet weak var gearSystemLabel: UILabel!
    @IBOutlet weak var gearConditionLabel: UILabel!
    @IBOutlet weak var driveShaftLabel: UILabel!
    @IBOutlet weak var gear4WDLabel: UILabel!
    @IBOutlet weak var gearSSummaryLabel: UILabel!
    
    let string_inspection_gear_working = String.localized("inspection_gear_working_label")
    let string_inspection_gear_not_working = String.localized("inspection_gear_not_working_label")
    
    let string_inspection_gear_complete = String.localized("inspection_gear_complete_label")
    let string_inspection_gear_incomplete = String.localized("inspection_gear_incomplete_label")
    let string_inspection_gear_no_drive_shaft = String.localized("inspection_gear_no_drive_shaft_label")


    override func initLocalString() {
        super.initLocalString()
        
        gearSystemLabel.text = String.localized("inspection_gear_system_label")
        gearConditionLabel.text = String.localized("inspection_gear_condition_label")
        driveShaftLabel.text = String.localized("inspection_gear_drive_shaft_label")
        gear4WDLabel.text = String.localized("inspection_gear_4wd_label")
        gearSSummaryLabel.text = String.localized("inspection_gear_summary_label")
        summaryGearSystemTextField.placeholder = gearSSummaryLabel.text
    }
    
    func doSomething()
    {
        let request = GearCheck.Something.Request()
        interactor?.doSomething(request: request)
    }
    
    //MARK: Presenter
    func displaySomething(viewModel: GearCheck.Something.ViewModel)
    {
        //nameTextField.text = viewModel.name
    }
    
    //MARK: UIView
    func setUIView(){
        summaryGearSystemTextField.autocorrectionType = .no
        
        summaryGearSystemTextField.delegate = self
        
        
        
    }
    
    
    //MARK: Radio
    func setRadio(){
        let attributedString = [NSAttributedString.Key.foregroundColor : UIColor.appPrimaryColor]
        
        gearSystemRadio.attributedTitles = [
            NSAttributedString(
                string: "AT", attributes: attributedString),
            NSAttributedString(
                string: "MT", attributes: attributedString)
        ]
        statusGearRadio.attributedTitles = [
            NSAttributedString(
                string: string_inspection_gear_working, attributes: attributedString),
            NSAttributedString(
                string: string_inspection_gear_not_working, attributes: attributedString)
        ]
        driveShaftGearRadio.attributedTitles = [
            NSAttributedString(
                string: string_inspection_gear_complete, attributes: attributedString),
            NSAttributedString(
                string: string_inspection_gear_incomplete, attributes: attributedString),
            NSAttributedString(
                string: string_inspection_gear_no_drive_shaft, attributes: attributedString)
        ]
    }
    @IBAction func gearSystemValueChanged(_ sender: Any) {
        let value = getRadioValue(from: ["AT", "MT"], selectIndex: gearSystemRadio.selectedIndex)
        DataController.shared.inspectionCarModel.gearSystem = value
        
        let gearSystemId = gearSystemRadio.selectedIndex + 1
        DataController.shared.inspectionCarModel.gearSystemId = gearSystemId
    }
    @IBAction func statusGearValueChanged(_ sender: Any) {
        let value = getRadioValue(from: [string_inspection_gear_working, string_inspection_gear_not_working],
                                  selectIndex: statusGearRadio.selectedIndex)
        DataController.shared.inspectionCarModel.statusGear = value
        
        let gearConditionId = statusGearRadio.selectedIndex + 1
        DataController.shared.inspectionCarModel.gearConditionId = gearConditionId
    }
    @IBAction func driveShaftGearValueChanged(_ sender: Any) {
        let value = getRadioValue(from: [string_inspection_gear_complete, string_inspection_gear_incomplete, string_inspection_gear_no_drive_shaft],
                                  selectIndex: driveShaftGearRadio.selectedIndex)
        DataController.shared.inspectionCarModel.driveShaftGear = value
        
        let driveShaftId = driveShaftGearRadio.selectedIndex + 1
        DataController.shared.inspectionCarModel.driveShaftId = driveShaftId
    }
    
    //MARK: CheckBox
    @IBAction func gear4WDTapped(_ sender: Any) {
        gear4WDCheckBox.toggle { check in
            DataController.shared.inspectionCarModel.isGear4WD = check
        }
    }
    
    func prepareData(){
        let model = DataController.shared.inspectionCarModel
        summaryGearSystemTextField.text = model.summaryGearSystem
        gear4WDCheckBox.check = model.isGear4WD
        driveShaftGearRadio.selectedIndex = getRadioIndexByValue(from: [string_inspection_gear_complete, string_inspection_gear_incomplete, string_inspection_gear_no_drive_shaft], value: model.driveShaftGear)
        statusGearRadio.selectedIndex = getRadioIndexByValue(from: [string_inspection_gear_working, string_inspection_gear_not_working], value: model.statusGear)
        gearSystemRadio.selectedIndex = getRadioIndexByValue(from: ["AT", "MT"], value: model.gearSystem)
        
    }
}

//MARK: TextField Delegate

extension GearCheckViewController : UITextViewDelegate {
    func textViewDidChange(_ textView: UITextView) {
        //print(textView.text)
        
        DataController.shared.inspectionCarModel.summaryGearSystem = textView.text
    }
}

extension GearCheckViewController {
    
    
    
    override func viewWillAppear(_ animated: Bool) {
        super.viewWillAppear(animated)
        scrollView.registKeyboardNotification()
        
        prepareData()
        
    }
    
    override func viewDidDisappear(_ animated: Bool) {
        super.viewDidDisappear(animated)
        scrollView.resignKeyboardNotification()
    }
}
