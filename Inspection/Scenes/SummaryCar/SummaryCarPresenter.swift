//
//  SummaryCarPresenter.swift
//  Inspection
//
//  Created by Thanawat prathumset on 4/2/2564 BE.
//  Copyright (c) 2564 BE ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol SummaryCarPresentationLogic
{
  func presentEvaluateGrade(response: SummaryCar.Something.Response)
    func presentPDF(response: SummaryCar.Something.Response)
    func presentSendToServer(response: SummaryCar.Something.Response)
    
    func presentAlertMessage(response: SummaryCar.Something.Response)
    
    func presentValidateSendToIMAT(response: SummaryCar.Something.Response)
    func presentSendToIMAT(response: SummaryCar.Something.Response)
     
}

class SummaryCarPresenter: SummaryCarPresentationLogic
{
  weak var viewController: SummaryCarDisplayLogic?
  
  // MARK: Do something
  
  func presentEvaluateGrade(response: SummaryCar.Something.Response)
  {
    let grade = response.grade
    var gradeDetailValue = ""
    switch grade {
    case "E":
        gradeDetailValue = "E Excellence ดีเยี่ยม"
    case "G":
        gradeDetailValue = "G Good ดีมาก"
    case "A":
        gradeDetailValue = "A Average ปานกลาง"
    case "F":
        gradeDetailValue = "F Fair พอใช้"
    case "P":
        gradeDetailValue = "P Poor แย่"
    case "X":
        gradeDetailValue = "X รถขับไม่ได้"
    case "Y":
        gradeDetailValue = "Y รถซาก"
    default:
        break
    }
    let gradeDetail = (grade == nil) ? "-" : gradeDetailValue
    let viewModel = SummaryCar.Something.ViewModel(carName: response.carName,
                                                   engine: response.engine,
                                                   vinNumber: response.vinNumber,
                                                   companyName: response.companyName,
                                                   colorCar: response.colorCar,
                                                   regis: response.regis,
                                                   grade: response.grade,
                                                   gradeDetail: gradeDetail)
    
    viewController?.displayGrade(viewModel: viewModel)
  }
    
    func presentPDF(response: SummaryCar.Something.Response) {
        let viewModel = SummaryCar.Something.ViewModel()
        viewController?.performPDF(viewModel: viewModel)
    }
    
    func presentSendToServer(response: SummaryCar.Something.Response) {
        
        if let error = response.error {
            let viewModel = SummaryCar.Something.ViewModel(errorMessage : error.message)
            viewController?.displayErrorMessage(viewModel: viewModel)
        }else{
            let viewModel = SummaryCar.Something.ViewModel()
            viewController?.displayResponseService(viewModel: viewModel)
        }
        
    }
    
    func presentAlertMessage(response: SummaryCar.Something.Response) {
        let alertMessage = "กรุณาบันทึกรับมอบรถก่อน"
        let viewModel = SummaryCar.Something.ViewModel(alertMessage: alertMessage)
        viewController?.displayAlertMessage(viewModel: viewModel)
    }
   
    func presentSendToIMAT(response: SummaryCar.Something.Response) {
        if let error = response.error {
            let viewModel = SummaryCar.Something.ViewModel(errorMessage: error.message)
            viewController?.displaySendInsectionIMATError(viewModel: viewModel)
        }else{
            let viewModel = SummaryCar.Something.ViewModel()
            viewController?.displaySendInsectionIMATSuccess(viewModel: viewModel)
        }
    }
    func presentValidateSendToIMAT(response: SummaryCar.Something.Response) {
        
        let viewModel = SummaryCar.Something.ViewModel(isEnableSendToIMAP: response.isEnableSendToIMAP, isEnableSave: response.isEnableSave)
        viewController?.displayActionEventSuccess(viewModel: viewModel)
    }
}
