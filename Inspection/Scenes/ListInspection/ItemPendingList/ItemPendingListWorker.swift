//
//  ItemPendingListWorker.swift
//  Inspection
//
//  Created by Thanawat prathumset on 3/2/2564 BE.
//  Copyright (c) 2564 BE ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit


typealias pendingListHandler = (ItemPendingList.Fetch.Response) -> ()
class ItemPendingListWorker
{
  
    func pendingList(email : String?, completion: @escaping pendingListHandler ){
        guard var email  = email else { return }
        
        
        showLoading()
        
//        email = email.replacingOccurrences(of: " ", with: "%20")
//        email = email.replacingOccurrences(of: "@", with: "%40")
        email = email.addingPercentEncoding(withAllowedCharacters: .urlHostAllowed)!
        let request = BookInPendingRequest(email: email)
        
        BookInPendingListService().callServiceArray(request: request) { (results) in
            
            hideLoading()
            
            switch results {
            
            case .success(let itemList):
                var type : ItemPendingList.TableType = .Default
                type = (itemList.count > 0) ? .Found : .NotFound
                
                let response = ItemPendingList.Fetch.Response(itemList: itemList.reversed(),
                                                               tableType: type)
                completion(response)
            case .failure(let error):
                let response = ItemPendingList.Fetch.Response(error : error.getMessage)
                completion(response)
            }
        }
    }
}
