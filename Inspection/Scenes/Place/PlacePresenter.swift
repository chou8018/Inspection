//
//  PlacePresenter.swift
//  Inspection
//
//  Created by Thanawat prathumset on 2/2/2564 BE.
//  Copyright (c) 2564 BE ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol PlacePresentationLogic
{
  func presentDataPicker(response: Place.Picker.Response)
    func selectReceiveAndStore(response: Place.Picker.Response)
    
    func presentReceiverDataPicker(response: Place.Picker.Response)
    func presentStorageDataPicker(response: Place.Picker.Response)
}

class PlacePresenter: PlacePresentationLogic
{
    
    
  weak var viewController: PlaceDisplayLogic?
  
  // MARK: Do something
  
  func presentDataPicker(response: Place.Picker.Response)
  {
    guard let locationList = response.locationList,
          let plantLocationList = response.plantLocationList else { return }
    let viewModel = Place.Picker.ViewModel(plantLocationList : plantLocationList,
                                           locationList : locationList,
                                           selectReceiveValue: response.selectReceiveValue,
                                           selectStoreValue: response.selectStoreValue)
    
    viewController?.presentUpdatePicker(viewModel: viewModel)
  }

    func selectReceiveAndStore(response: Place.Picker.Response) {
        let viewModel = Place.Picker.ViewModel(selectReceiveName: response.selectReceiveName,
                                               selectStoreName: response.selectStoreName)
        
        viewController?.presentSelectProvincePicker(viewModel: viewModel)
    }
    
    func presentStorageDataPicker(response: Place.Picker.Response) {
        let viewModel = Place.Picker.ViewModel(locationList : response.locationList)
        viewController?.displayStoragePicker(viewModel: viewModel)
    }
    
    func presentReceiverDataPicker(response: Place.Picker.Response) {
        let viewModel = Place.Picker.ViewModel(plantLocationList : response.plantLocationList)
        viewController?.displayReceiverPicker(viewModel: viewModel)
    }
}
