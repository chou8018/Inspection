//
//  ElectronicDeviceCheckPresenter.swift
//  Inspection
//
//  Created by Thanawat prathumset on 15/2/2564 BE.
//  Copyright (c) 2564 BE ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol ElectronicDeviceCheckPresentationLogic
{
    func presentSomething(response: ElectronicDeviceCheck.Something.Response)
    // add on 12/22/2023
    func presentWindowOptions(response: ElectronicDeviceCheck.Something.Response)
}

class ElectronicDeviceCheckPresenter: ElectronicDeviceCheckPresentationLogic
{
    weak var viewController: ElectronicDeviceCheckDisplayLogic?
    
    // MARK: Do something
    
    func presentSomething(response: ElectronicDeviceCheck.Something.Response)
    {
        let viewModel = ElectronicDeviceCheck.Something.ViewModel()
        viewController?.displaySomething(viewModel: viewModel)
    }
    
    func presentWindowOptions(response: ElectronicDeviceCheck.Something.Response) {
        if let kError = response.error {
            let message = kError.message
            let viewModel = ElectronicDeviceCheck.Something.ViewModel(errorMessage: message)
            viewController?.displayWindowOptionError(viewModel: viewModel)
        }else{
            guard let result = response.windowOptions else { return }
            var values = result.map({ ("\($0.desc_LO ?? "")") })
            
            if !DataController.shared.isThaiLanguage() {
                values = result.map({ ("\($0.desc_BU ?? "")") })
            }
            
            let viewModel = ElectronicDeviceCheck.Something.ViewModel(windowOptions: values)
            viewController?.displayWindowOption(viewModel: viewModel)
        }
    }
}
