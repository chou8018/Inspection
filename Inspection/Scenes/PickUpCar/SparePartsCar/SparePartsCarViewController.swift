//
//  SparePartsCarViewController.swift
//  Inspection
//
//  Created by Thanawat prathumset on 8/2/2564 BE.
//  Copyright (c) 2564 BE ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit
import RadioGroup

protocol SparePartsCarDisplayLogic: AnyObject
{
  func displaySomething(viewModel: SparePartsCar.Something.ViewModel)
    func displayCheckBoxTireSpare(viewModel: SparePartsCar.Something.ViewModel)
}

class SparePartsCarViewController: UIViewController, SparePartsCarDisplayLogic
{
  var interactor: SparePartsCarBusinessLogic?
  var router: (NSObjectProtocol & SparePartsCarRoutingLogic & SparePartsCarDataPassing)?

  // MARK: Object lifecycle
  
  override init(nibName nibNameOrNil: String?, bundle nibBundleOrNil: Bundle?)
  {
    super.init(nibName: nibNameOrNil, bundle: nibBundleOrNil)
    setup()
  }
  
  required init?(coder aDecoder: NSCoder)
  {
    super.init(coder: aDecoder)
    setup()
  }
  
  // MARK: Setup
  
  private func setup()
  {
    let viewController = self
    let interactor = SparePartsCarInteractor()
    let presenter = SparePartsCarPresenter()
    let router = SparePartsCarRouter()
    viewController.interactor = interactor
    viewController.router = router
    interactor.presenter = presenter
    presenter.viewController = viewController
    router.viewController = viewController
    router.dataStore = interactor
  }
  
  // MARK: Routing
  
  override func prepare(for segue: UIStoryboardSegue, sender: Any?)
  {
    if let scene = segue.identifier {
      let selector = NSSelectorFromString("routeTo\(scene)WithSegue:")
      if let router = router, router.responds(to: selector) {
        router.perform(selector, with: segue)
      }
    }
  }
  
  // MARK: View lifecycle
  
  override func viewDidLoad()
  {
    super.viewDidLoad()
    setUIView()
    setUpRadioGroup()
    doSomething()
  }
  
  // MARK: Do something
  
  //@IBOutlet weak var nameTextField: UITextField!
    @IBOutlet weak var SparePartOverAllRadio: RadioGroup!
    
    @IBOutlet weak var scrollView: UIScrollView!
    

    @IBOutlet weak var noteSparePartOverAllTextField: UITextField!
    @IBOutlet weak var decorationTextField: MultilineTextField!
    
    
    @IBOutlet weak var tireSpareCheckBox: CheckBoxUIButton!
    @IBOutlet weak var toolSpareCheckBox: CheckBoxUIButton!
    @IBOutlet weak var maxlinerCheckBox: CheckBoxUIButton!
    @IBOutlet weak var roofreckCheckBox: CheckBoxUIButton!
    @IBOutlet weak var craneCheckBox: CheckBoxUIButton!
    
    @IBOutlet weak var cableChargeEVCheckBox: CheckBoxUIButton!
    
  func doSomething()
  {
    let request = SparePartsCar.Something.Request()
    interactor?.doSomething(request: request)
  }
  

    func displaySomething(viewModel: SparePartsCar.Something.ViewModel)
  {
    //nameTextField.text = viewModel.name
  }
    
    
    //MARK: UIView
    func setUIView(){
        //UITextField
        noteSparePartOverAllTextField.autocorrectionType = .no
        //tireSpareTextField.autocorrectionType = .no
        decorationTextField.autocorrectionType = .no
        
        noteSparePartOverAllTextField.delegate = self
        //tireSpareTextField.delegate = self
        decorationTextField.delegate = self
        
        addTarget(from: noteSparePartOverAllTextField)
        //addTarget(from: tireSpareTextField)
        
    }
    
    fileprivate func addTarget(from textfield: UITextField ){
        textfield.addTarget(self, action: #selector(textFieldDidChange(_:)),for: .editingChanged)
    }
    
    
    //MARK: RadioGroup
    
    func setUpRadioGroup(){
        let attributedString = [NSAttributedString.Key.foregroundColor : UIColor.appPrimaryColor]
        
        //Color
        SparePartOverAllRadio.attributedTitles = [
            NSAttributedString(string: "ดี",
                               attributes: attributedString),
            NSAttributedString(string: "ไม่ดี",
                               attributes: attributedString)
        ]
    }
    
    @IBAction func SparePartOverAllRadioVelueChanged(_ sender: Any) {
        var selectString:String? = nil
        switch SparePartOverAllRadio.selectedIndex {
        case 0:
            selectString = "ดี"
        case 1:
            selectString = "ไม่ดี"
        default:
            return
        }
        DataController.shared.receiverCarModel.spareOverAll = selectString
        let spareOverAllId = SparePartOverAllRadio.selectedIndex + 1
        DataController.shared.receiverCarModel.spareOverAllId = spareOverAllId
    }
    
    
    
    // MARK: CheckBox
    @IBAction func tireSpareTapped(_ sender: Any) {
        tireSpareCheckBox.toggle { check in
            DataController.shared.receiverCarModel.isSpareTire = check
        }
//        tireSpareCheckBox.toggle { [weak self] check in
//            if !check {
//                self?.tireSpareTextField.text = ""
//            }
//        }
    }
    
    @IBAction func toolSpareTapped(_ sender: Any) {
        toolSpareCheckBox.toggle { check in
            DataController.shared.receiverCarModel.isHandTool = check
        }
    }
    @IBAction func maxlinerTapped(_ sender: Any) {
        maxlinerCheckBox.toggle { check in
            DataController.shared.receiverCarModel.isMaxliner = check
        }
    }
    @IBAction func roofRackTapped(_ sender: Any) {
        roofreckCheckBox.toggle { check in
            DataController.shared.receiverCarModel.isRoofrack = check
        }
    }
    @IBAction func craneTapped(_ sender: Any) {
        craneCheckBox.toggle { check in
            DataController.shared.receiverCarModel.isJackCar = check
        }
    }
    
    @IBAction func cableChargeEVTapped(_ sender: Any) {
        cableChargeEVCheckBox.toggle{ check in
            DataController.shared.receiverCarModel.isCableChargeEV = check
        }
    }
  
    
    func displayCheckBoxTireSpare(viewModel: SparePartsCar.Something.ViewModel) {
        tireSpareCheckBox.check = viewModel.isTireSpare ?? false
    }
    
    
    @objc func prepareData(){
        let model = DataController.shared.receiverCarModel
        
        let spareOverAllValue = ["ดี", "ไม่ดี"]
      
        
        SparePartOverAllRadio.selectedIndex = getRadioIndexByValue(from: spareOverAllValue, value: model.spareOverAll)
        noteSparePartOverAllTextField.text = model.spareOverAllNote
        decorationTextField.text = model.accessoriesNote
        
        tireSpareCheckBox.check = model.isSpareTire ?? false
        toolSpareCheckBox.check = model.isHandTool ?? false
        maxlinerCheckBox.check = model.isMaxliner ?? false
        roofreckCheckBox.check = model.isRoofrack ?? false
        craneCheckBox.check = model.isJackCar ?? false
        cableChargeEVCheckBox.check = model.isCableChargeEV ?? false
        
    }
    
    @objc func updateView(){
        let isEnable = getEnableView()
        SparePartOverAllRadio.setEnableView(isEnable: isEnable)
        noteSparePartOverAllTextField.setEnableView(isEnable: isEnable)
        decorationTextField.setEnableView(isEnable: isEnable)
        
        tireSpareCheckBox.setEnableView(isEnable: isEnable)
        toolSpareCheckBox.setEnableView(isEnable: isEnable)
        maxlinerCheckBox.setEnableView(isEnable: isEnable)
        roofreckCheckBox.setEnableView(isEnable: isEnable)
        craneCheckBox.setEnableView(isEnable: isEnable)
        cableChargeEVCheckBox.setEnableView(isEnable: isEnable)
        
        //------------------------------------------------------//
    }
    
}
extension SparePartsCarViewController : UITextViewDelegate {
    func textViewDidChange(_ textView: UITextView) {
        //print(textView.text)
        
        DataController.shared.receiverCarModel.accessoriesNote = textView.text
        
    }
}
// MARK: UITextFieldDelegate
extension SparePartsCarViewController : UITextFieldDelegate {
    @objc func textFieldDidChange(_ textField: UITextField) {
        //print(textField.text)
        
    
        switch textField {
        case noteSparePartOverAllTextField:
            DataController.shared.receiverCarModel.spareOverAllNote = textField.text
            
        default:
            break
        }
    }
    
    
    
    func textFieldShouldReturn(_ textField: UITextField) -> Bool {
        textField.resignFirstResponder()
         
      
        return true
    }
}
//MARK: keyboard
extension SparePartsCarViewController {
   override func viewWillAppear(_ animated: Bool) {
       super.viewWillAppear(animated)
       scrollView.registKeyboardNotification()
    
        prepareData()
        updateView()
        
    NotificationCenter.default.addObserver(self, selector: #selector(updateView), name: NSNotification.Name("updateUI"), object: nil)
   }
   
   override func viewDidDisappear(_ animated: Bool) {
       super.viewDidDisappear(animated)
       scrollView.resignKeyboardNotification()
    
        NotificationCenter.default.removeObserver(self)
   }
}
