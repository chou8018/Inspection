//
//  EngineCheckViewController.swift
//  Inspection
//
//  Created by Thanawat prathumset on 15/2/2564 BE.
//  Copyright (c) 2564 BE ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit
import RadioGroup

protocol EngineCheckDisplayLogic: AnyObject
{
  func displaySomething(viewModel: EngineCheck.Something.ViewModel)
}

class EngineCheckViewController: UIViewController, EngineCheckDisplayLogic
{
  var interactor: EngineCheckBusinessLogic?
  var router: (NSObjectProtocol & EngineCheckRoutingLogic & EngineCheckDataPassing)?

  // MARK: Object lifecycle
  
  override init(nibName nibNameOrNil: String?, bundle nibBundleOrNil: Bundle?)
  {
    super.init(nibName: nibNameOrNil, bundle: nibBundleOrNil)
    setup()
  }
  
  required init?(coder aDecoder: NSCoder)
  {
    super.init(coder: aDecoder)
    setup()
  }
  
  // MARK: Setup
  
  private func setup()
  {
    let viewController = self
    let interactor = EngineCheckInteractor()
    let presenter = EngineCheckPresenter()
    let router = EngineCheckRouter()
    viewController.interactor = interactor
    viewController.router = router
    interactor.presenter = presenter
    presenter.viewController = viewController
    router.viewController = viewController
    router.dataStore = interactor
  }
  
  // MARK: Routing
  
  override func prepare(for segue: UIStoryboardSegue, sender: Any?)
  {
    if let scene = segue.identifier {
      let selector = NSSelectorFromString("routeTo\(scene)WithSegue:")
      if let router = router, router.responds(to: selector) {
        router.perform(selector, with: segue)
      }
    }
  }
  
  // MARK: View lifecycle
  
  override func viewDidLoad()
  {
    super.viewDidLoad()
    setUIView()
    setRadio()
    doSomething()
  }
  
  // MARK: Do something
  
  //@IBOutlet weak var nameTextField: UITextField!
    @IBOutlet weak var scrollView: UIScrollView!
    
    @IBOutlet weak var summaryEngineTextField: MultilineTextField!
    
    @IBOutlet weak var summaryEngineRadio: RadioGroup!
    @IBOutlet weak var typeEngineRadio: RadioGroup!
    @IBOutlet weak var haveOilRadio: RadioGroup!
    @IBOutlet weak var fuelSystemRadio: RadioGroup!
    @IBOutlet weak var gasSystemRadio: RadioGroup!
  
    @IBOutlet weak var useableGeneralCheckBox: CheckBoxUIButton!
    @IBOutlet weak var soundAbnormalGeneralCheckBox: CheckBoxUIButton!
    @IBOutlet weak var leakFuelGeneralCheckBox: CheckBoxUIButton!
    @IBOutlet weak var stainWaterGeneralCheckBox: CheckBoxUIButton!
    @IBOutlet weak var machineLightShowGeneralCheckBox: CheckBoxUIButton!
    @IBOutlet weak var engineAbnormalGeneralCheckBox: CheckBoxUIButton!
    @IBOutlet weak var needRepairGeneralCheckBox: CheckBoxUIButton!
    
  func doSomething()
  {
    let request = EngineCheck.Something.Request()
    interactor?.doSomething(request: request)
  }
  
    //MARK: Presenter
  func displaySomething(viewModel: EngineCheck.Something.ViewModel)
  {
    //nameTextField.text = viewModel.name
  }
    
    //MARK: UIView
    func setUIView(){
        summaryEngineTextField.autocorrectionType = .no
        summaryEngineTextField.delegate = self
    }
    
    //MARK: Radio
    func setRadio(){
        let attributedString = [NSAttributedString.Key.foregroundColor : UIColor.appPrimaryColor]
         
        summaryEngineRadio.attributedTitles = [
            NSAttributedString(string: "ใช้งานได้", attributes: attributedString),
            NSAttributedString(string: "ใช้งานไม่ได้", attributes: attributedString)
        ]
        typeEngineRadio.attributedTitles = [
            NSAttributedString(string: "เบนซิน", attributes: attributedString),
            NSAttributedString(string: "ดีเซล", attributes: attributedString),
            NSAttributedString(string: "EV", attributes: attributedString),
            NSAttributedString(string: "Hybrid / เบนซิน", attributes: attributedString),
            NSAttributedString(string: "Hybrid / ดีเซล", attributes: attributedString)
        ]
        haveOilRadio.attributedTitles = [
            NSAttributedString(string: "ขาด", attributes: attributedString),
            NSAttributedString(string: "ไม่ขาด", attributes: attributedString)
        ]
        fuelSystemRadio.attributedTitles = [
            NSAttributedString(string: "หัวฉีด", attributes: attributedString),
            NSAttributedString(string: "คาร์บูเรเตอร์", attributes: attributedString),
            NSAttributedString(string: "Direct Injection", attributes: attributedString)

        ]
        gasSystemRadio.attributedTitles = [
            NSAttributedString(string: "LPG ระบบหัวฉีด", attributes: attributedString),
            NSAttributedString(string: "LPG ระบบดูด", attributes: attributedString),
            NSAttributedString(string: "CNG/NGV ระบบหัวฉีด", attributes: attributedString),
            NSAttributedString(string: "CNG/NGV ระบบดูด", attributes: attributedString)
        ]

    }
    //MARK: Radio ValueChange
    @IBAction func summaryEngineValueChanged(_ sender: Any) {
        let value = getRadioValue(from: ["ใช้งานได้", "ใช้งานไม่ได้"],
                                  selectIndex: summaryEngineRadio.selectedIndex)
        DataController.shared.inspectionCarModel.engineOverall = value
        
        let isEngineWorks = summaryEngineRadio.selectedIndex == 0 ? true : false
        DataController.shared.inspectionCarModel.isEngineWorks = isEngineWorks
    }
    
    @IBAction func typeEngineValueChanged(_ sender: Any) {
        let value = getRadioValue(from: ["เบนซิน", "ดีเซล", "EV", "Hybrid / เบนซิน", "Hybrid / ดีเซล"],
                                  selectIndex: typeEngineRadio.selectedIndex)
        DataController.shared.inspectionCarModel.typeEngine = value
        
        let engineSystemId = typeEngineRadio.selectedIndex + 1
        DataController.shared.inspectionCarModel.engineSystemId = engineSystemId
    }
    
    @IBAction func haveOilValueChanged(_ sender: Any) {
        let value = getRadioValue(from: ["ขาด", "ไม่ขาด"],
                                  selectIndex: haveOilRadio.selectedIndex)
        DataController.shared.inspectionCarModel.oilEngine = value
        
        let isLubricatorLow = haveOilRadio.selectedIndex == 0 ? true : false
        DataController.shared.inspectionCarModel.isLubricatorLow = isLubricatorLow
    }
    
    @IBAction func fuelSystemValueChanged(_ sender: Any) {
        let value = getRadioValue(from: ["หัวฉีด", "คาร์บูเรเตอร์", "Direct Injection"],
                                  selectIndex: fuelSystemRadio.selectedIndex)
        DataController.shared.inspectionCarModel.fuelSystem = value
        
        let fuelSystemId = fuelSystemRadio.selectedIndex + 1
        DataController.shared.inspectionCarModel.fuelSystemId = fuelSystemId
    }
    
    fileprivate var defautValue = -1
    fileprivate var oldValue = -1
    @IBAction func gasSystemValueChanged(_ sender: Any) {
        let value =  getRadioValue(from : ["LPG ระบบหัวฉีด", "LPG ระบบดูด",
                                           "CNG/NGV ระบบหัวฉีด", "CNG/NGV ระบบดูด"],
                                   selectIndex: gasSystemRadio.selectedIndex)
        
        let select = gasSystemRadio.selectedIndex
        gasSystemRadio.selectedIndex = oldValue == select ? defautValue : select
        DataController.shared.inspectionCarModel.gasSystem = oldValue == select ? nil : value
        
        let gasTypeId =  oldValue == select ? nil : (select + 1)
        DataController.shared.inspectionCarModel.gasTypeId = gasTypeId
        
        oldValue = defautValue != gasSystemRadio.selectedIndex ? select : defautValue
    }
  
    
    //MARK: CheckBox
    @IBAction func useableTapped(_ sender: Any) {
        useableGeneralCheckBox.toggle { check in
            DataController.shared.inspectionCarModel.useableGeneral = check
        }
    }
    @IBAction func soundAbnormalTapped(_ sender: Any) {
        soundAbnormalGeneralCheckBox.toggle { check in
            DataController.shared.inspectionCarModel.soundAbnormalGeneral = check
        }
    }
    @IBAction func leakFuelTapped(_ sender: Any) {
        leakFuelGeneralCheckBox.toggle { check in
            DataController.shared.inspectionCarModel.leakFuelGeneral = check
        }
    }
    @IBAction func stainWaterTapped(_ sender: Any) {
        stainWaterGeneralCheckBox.toggle { check in
            DataController.shared.inspectionCarModel.stainWaterGeneral = check
        }
    }
    @IBAction func machineLightShowTapped(_ sender: Any) {
        machineLightShowGeneralCheckBox.toggle { check in
            DataController.shared.inspectionCarModel.machineLightShowGeneral = check
        }
    }
    @IBAction func engineAbnormalTapped(_ sender: Any) {
        engineAbnormalGeneralCheckBox.toggle { check in
            DataController.shared.inspectionCarModel.engineAbnormalGeneral = check
        }
    }
    @IBAction func needRepairTapped(_ sender: Any) {
        needRepairGeneralCheckBox.toggle { check in
            DataController.shared.inspectionCarModel.needRepairGeneral = check
        }
    }
    
    func prepareData() {
        let model = DataController.shared.inspectionCarModel
        summaryEngineTextField.text = model.summaryEngine
        needRepairGeneralCheckBox.check = model.needRepairGeneral
        engineAbnormalGeneralCheckBox.check = model.engineAbnormalGeneral
        machineLightShowGeneralCheckBox.check = model.machineLightShowGeneral
        stainWaterGeneralCheckBox.check = model.stainWaterGeneral
        leakFuelGeneralCheckBox.check = model.leakFuelGeneral
        soundAbnormalGeneralCheckBox.check = model.soundAbnormalGeneral
        useableGeneralCheckBox.check = model.useableGeneral
        
        gasSystemRadio.selectedIndex = getRadioIndexByValue(from : ["LPG ระบบหัวฉีด", "LPG ระบบดูด",
                                                                    "CNG/NGV ระบบหัวฉีด", "CNG/NGV ระบบดูด"], value: model.gasSystem)
        
        fuelSystemRadio.selectedIndex = getRadioIndexByValue(from : ["หัวฉีด", "คาร์บูเรเตอร์", "Direct Injection"], value: model.fuelSystem)
        
        haveOilRadio.selectedIndex = getRadioIndexByValue(from : ["ขาด", "ไม่ขาด"], value: model.oilEngine)
        
        typeEngineRadio.selectedIndex = getRadioIndexByValue(from : ["เบนซิน", "ดีเซล", "EV", "Hybrid / เบนซิน", "Hybrid / ดีเซล"], value: model.typeEngine)
        
        summaryEngineRadio.selectedIndex = getRadioIndexByValue(from: ["ใช้งานได้", "ใช้งานไม่ได้"], value: model.engineOverall)
    }
    
}
//MARK: TextView Delegate
extension EngineCheckViewController : UITextViewDelegate {
    func textViewDidChange(_ textView: UITextView) {
        //print(textView.text)
        DataController.shared.inspectionCarModel.summaryEngine = textView.text
    }
}

 
extension EngineCheckViewController {
    
    
    
    override func viewWillAppear(_ animated: Bool) {
        super.viewWillAppear(animated)
        scrollView.registKeyboardNotification()
        
        prepareData()
    }
    
    override func viewDidDisappear(_ animated: Bool) {
        super.viewDidDisappear(animated)
        scrollView.resignKeyboardNotification()
    }
}
