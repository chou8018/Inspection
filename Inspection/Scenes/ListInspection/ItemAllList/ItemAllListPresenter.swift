//
//  ItemAllListPresenter.swift
//  Inspection
//
//  Created by Thanawat prathumset on 3/2/2564 BE.
//  Copyright (c) 2564 BE ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol ItemAllListPresentationLogic
{
  func presentSearchByText(response: ItemAllList.SearchType.Response)
    func presentTableView(response: ItemAllList.SearchType.Response)
    func presentDidSelectItem(response: ItemAllList.SearchType.Response)
    
    func presentDetail(response: ItemAllList.SearchType.Response)
    func presentPDFViewer(response: ItemAllList.SearchType.Response)
    
    func presentBookInDetail(response: ItemAllList.SearchType.Response)
    
    func presentReloadSearch(response: ItemAllList.SearchType.Response)
    
}

class ItemAllListPresenter: ItemAllListPresentationLogic
{
  weak var viewController: ItemAllListDisplayLogic?
  
  // MARK: Do something
  
  func presentSearchByText(response: ItemAllList.SearchType.Response)
  {
    let searchByText = response.selectSearchBy?.model.1
    let viewModel = ItemAllList.SearchType.ViewModel(searchByText: searchByText)
    viewController?.displayTextSearchByType(viewModel: viewModel)
  }
    
    func presentTableView(response: ItemAllList.SearchType.Response) {
        
        
        if let error =  response.error {
            let viewModel = ItemAllList.SearchType.ViewModel(errorMessage: error.message)
            viewController?.displayErrorFetchBookInList(viewModel: viewModel)
        }else{
            let viewModel = ItemAllList.SearchType.ViewModel(itemList : response.itemList ,
                                                             tableType: response.tableType)
            
            viewController?.displayResultSearchToTableView(viewModel: viewModel)
        }
        
        
    }
    
    func presentDidSelectItem(response: ItemAllList.SearchType.Response) {
        let viewModel = ItemAllList.SearchType.ViewModel()
        viewController?.didSelectItemTableView(viewModel: viewModel)
    }
    
    func presentDetail(response: ItemAllList.SearchType.Response) {
        let viewModel = ItemAllList.SearchType.ViewModel()
        viewController?.displayShowDetail(viewModel: viewModel)
    }
    func presentPDFViewer(response: ItemAllList.SearchType.Response) {
        let viewModel = ItemAllList.SearchType.ViewModel()
        viewController?.displayShowPdfViewer(viewModel: viewModel)
    }
    
    
    func presentBookInDetail(response: ItemAllList.SearchType.Response) {
        if let error = response.error {
            let errorMessage = error.message
            let viewModel = ItemAllList.SearchType.ViewModel(errorMessage: errorMessage)
            viewController?.displayErrorGetBookInDetail(viewModel: viewModel)
        }else{
            let viewModel = ItemAllList.SearchType.ViewModel()
            viewController?.displayBookInDetail(viewModel: viewModel)
        }
        
    }
    
    func presentReloadSearch(response: ItemAllList.SearchType.Response) {
        viewController?.displayReloadSearch(viewModel: ItemAllList.SearchType.ViewModel())
    }
}
