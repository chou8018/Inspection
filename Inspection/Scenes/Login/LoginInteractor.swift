//
//  LoginInteractor.swift
//  Inspection
//
//  Created by Thanawat prathumset on 1/2/2564 BE.
//  Copyright (c) 2564 BE ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol LoginBusinessLogic
{
  func getLogin(request: Login.getLogin.Request)
    
    func validateField(request: Login.getLogin.Request)
}

protocol LoginDataStore
{
  //var name: String { get set }
}

class LoginInteractor: LoginBusinessLogic, LoginDataStore
{
  var presenter: LoginPresentationLogic?
  var worker: LoginWorker?
  //var name: String = ""
  
  // MARK: Do something
  
  func getLogin(request: Login.getLogin.Request)
  {
    let username = request.username.trimWhiteSpace
    let password = request.password.trimWhiteSpace
    
    worker = LoginWorker()
    worker?.login(username: username, password: password, completion: {[weak self] (response) in
        if let _ = response.error {
            let kError = KError.commonError(message: "username \(String.localized("login_or_label")) password\n\(String.localized("login_not_correct_label"))").getMessage
            let response = Login.getLogin.Response(error: kError)
            self?.presenter?.presetResultLogin(response: response)
        }else{
            if let login = response.loginResponse {
                KeyChainService.shared.setFirstName(value: login.firstName)
                KeyChainService.shared.setLastName(value: login.lastName)
                KeyChainService.shared.setEmail(value: login.mail)
            }
            
            self?.presenter?.presetResultLogin(response: response)
        }
    })  
  }
    
    func validateField(request: Login.getLogin.Request) {
        let username = request.username.trimWhiteSpace
        let password = request.password.trimWhiteSpace
        
        let validUsername = !username.isEmpty
        let validPassworwd =  !password.isEmpty
        
        var message : String = ""
        message += validUsername ? "" : "username \(String.localized("login_not_correct_label"))\n"
        message += validPassworwd ? "" : "password \(String.localized("login_not_correct_label"))\n"
        
        let response = Login.getLogin.Response(validateErrorMessage: message)
        presenter?.presentValidateField(response: response)
    }
}
