//
//  EngineCheckPresenter.swift
//  Inspection
//
//  Created by Thanawat prathumset on 15/2/2564 BE.
//  Copyright (c) 2564 BE ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol EngineCheckPresentationLogic
{
  func presentSomething(response: EngineCheck.Something.Response)
    
    // add on 12/22/2023
    func presentCatalyticOptions(response: EngineCheck.Something.Response)
}

class EngineCheckPresenter: EngineCheckPresentationLogic
{
  weak var viewController: EngineCheckDisplayLogic?
  
  // MARK: Do something
  
  func presentSomething(response: EngineCheck.Something.Response)
  {
    let viewModel = EngineCheck.Something.ViewModel()
    viewController?.displaySomething(viewModel: viewModel)
  }
    
    func presentCatalyticOptions(response: EngineCheck.Something.Response) {
        if let kError = response.error {
            let message = kError.message
            let viewModel = EngineCheck.Something.ViewModel(errorMessage: message)
            viewController?.displayCatalyticOptionError(viewModel: viewModel)
        }else{
            guard let result = response.catalyticOptions else { return }
            var values = result.map({ ("\($0.desc_LO ?? "")") })
            
            if !DataController.shared.isThaiLanguage() {
                values = result.map({ ("\($0.desc_BU ?? "")") })
            }
            
//            values = values.sorted(by: { $0 < $1 })
            let viewModel = EngineCheck.Something.ViewModel(catalyticOptions: values)
            viewController?.displayCatalyticOption(viewModel: viewModel)
        }
    }
}
