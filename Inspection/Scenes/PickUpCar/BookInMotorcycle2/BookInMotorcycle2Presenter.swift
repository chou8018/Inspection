//
//  BookInMotorcycle2Presenter.swift
//  Inspection
//
//  Created by Thanawat Pratumsat on 23/8/2564 BE.
//  Copyright (c) 2564 BE ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol BookInMotorcycle2PresentationLogic
{
  func presentSomething(response: BookInMotorcycle2.Something.Response)
    func presentValidateMilesNumber(response: BookInMotorcycle2.Something.Response)
    func presentKeyChecked(response: BookInMotorcycle2.Something.Response)
    func presentRemoteChecked(response: BookInMotorcycle2.Something.Response)
    func presentRemoteKeyChecked(response: BookInMotorcycle2.Something.Response)
    func presentImmobilizerKeyChecked(response: BookInMotorcycle2.Something.Response)
    

    func presentGearBoxList(response: BookInMotorcycle2.Something.Response)
    func presentGearBoxText(response: BookInMotorcycle2.Something.Response)
}

class BookInMotorcycle2Presenter: BookInMotorcycle2PresentationLogic
{
  weak var viewController: BookInMotorcycle2DisplayLogic?
  
  // MARK: Do something
  
  func presentSomething(response: BookInMotorcycle2.Something.Response)
  {
    let viewModel = BookInMotorcycle2.Something.ViewModel()
    viewController?.displaySomething(viewModel: viewModel)
  }
    
    func presentValidateMilesNumber(response: BookInMotorcycle2.Something.Response) {
        let viewModel = BookInMotorcycle2.Something.ViewModel(validateMilesNumber: response.validateMilesNumber)
        viewController?.displayValidateMileNumber(viewModel: viewModel)
    }
    
    func presentKeyChecked(response: BookInMotorcycle2.Something.Response) {
        let viewModel = BookInMotorcycle2.Something.ViewModel(isKeyCheck: response.isKeyCheck)
        viewController?.displayKeyChecked(viewModel: viewModel)
    }
    
    func presentRemoteChecked(response: BookInMotorcycle2.Something.Response) {
        let viewModel = BookInMotorcycle2.Something.ViewModel(isRemoteCheck: response.isRemoteCheck)
        viewController?.displayRemoteChecked(viewModel: viewModel)
    }
    
    func presentRemoteKeyChecked(response: BookInMotorcycle2.Something.Response) {
        let viewModel = BookInMotorcycle2.Something.ViewModel(isRemoteKeyCheck: response.isRemoteKeyCheck)
        viewController?.displayRemoteKeyChecked(viewModel: viewModel)
    }
    
    func presentImmobilizerKeyChecked(response: BookInMotorcycle2.Something.Response) {
        let viewModel = BookInMotorcycle2.Something.ViewModel(isImmobilizerKeyCheck: response.isImmobilizerKeyCheck)
        viewController?.displayImmobiliserKeyChecked(viewModel: viewModel)
    }
    
   
    
    func presentGearBoxList(response: BookInMotorcycle2.Something.Response) {
        if let error = response.error {
            let viewModel = BookInMotorcycle2.Something.ViewModel(errorMessage: error.message)
            viewController?.displayErrorGearBoxList(viewModel: viewModel)
        }else{
            guard let gearBoxList = response.gearBoxList else { return }
            let gearBoxList_bu = gearBoxList.compactMap({ $0.desc_BU })
            let viewModel = BookInMotorcycle2.Something.ViewModel(gearBoxList_bu: gearBoxList_bu)
            viewController?.displayGearBoxList(viewModel: viewModel)
        }
        
    }
    
    func presentGearBoxText(response: BookInMotorcycle2.Something.Response) {
        let viewModel = BookInMotorcycle2.Something.ViewModel(gearBox_BU: response.gearBox_BU)
        viewController?.displayGearBoxText(viewModel: viewModel)
    }
}
